# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LlNJXc2P8w7g1JNSKlZ8TtRBaA6OmE7Q
"""

!pip install yfinance pandas matplotlib

import yfinance as yf
import pandas as pd
import matplotlib.pyplot as plt

etfs = {
    "Stocks": "VTI",   # US Stock Market
    "Bonds": "AGG",    # US Bonds
    "Cash": "BIL"      # Treasury Bills
}

data = yf.download(list(etfs.values()), start="2020-01-01", end="2025-01-01")["Close"]
data.columns = etfs.keys()   # rename to Stocks, Bonds, Cash
data = data.dropna()
data.head()

normalized = data / data.iloc[0] * 100
normalized.head()

allocations = {
    "Conservative": {"Stocks": 0.2, "Bonds": 0.7, "Cash": 0.1},
    "Balanced":     {"Stocks": 0.5, "Bonds": 0.4, "Cash": 0.1},
    "Aggressive":   {"Stocks": 0.8, "Bonds": 0.15, "Cash": 0.05}
}

portfolio_values = pd.DataFrame(index=normalized.index)
for profile, weights in allocations.items():
    portfolio_values[profile] = sum(normalized[a] * w for a, w in weights.items())
portfolio_values.head()

plt.figure(figsize=(10,6))
for col in portfolio_values.columns:
    plt.plot(portfolio_values.index, portfolio_values[col], label=col)
plt.title("Robo-Advisor Portfolio Simulation (2020â€“2025)")
plt.xlabel("Date")
plt.ylabel("Portfolio Value (Start = $100)")
plt.legend()
plt.grid(True)
plt.show()

portfolio_values.tail(1).T.rename(columns={portfolio_values.tail(1).columns[0]:"Final Value"})
